plugins {
	id 'fabric-loom' version "1.8-SNAPSHOT"
	id 'legacy-looming' version "1.8-SNAPSHOT"
	id 'maven-publish'
}

def ENV = System.getenv()
def minecraft_version = ENV.MC_VERSION ? ENV.MC_VERSION : "1.8.9"

base.archivesName = project.archives_base_name
version = project.mod_version
group = project.maven_group

Boolean useLFIntermediaries(String mc_version) {
	boolean legacy = true

	try {
		if (mc_version.contains(".")) {
			String major = mc_version.split("\\.")[1].toLowerCase()

			if (major.contains("-")) {
				major = major.split("-")[0]
			}

			if (major.contains("_")) {
				major = major.split("_")[0]
			}

			if (major.contains("pre")) {
				major = major.split("pre")[0]
			}

			if (major.contains(" ")) {
				major = major.split(" ")[0]
			}

			int majore = major.toInteger()

			legacy = !(majore > 13)
		} else if (mc_version.contains("w")) {
			def parts = mc_version.split("w")
			def year = parts[0].toInteger()
			def weeks = parts[1].substring(0, 2).toInteger()
			def iteration = parts[1].substring(2)

			legacy = !(year > 18 || (year == 18 && (weeks > 43 || (weeks == 43 && iteration != "a"))))
		}
	} catch (Exception e) {
		e.printStackTrace()
	}

	if (mc_version.startsWith("3D")) legacy = false;

	return legacy;
}

repositories {
	mavenLocal()
}

legacyLooming {
	intermediaryVersion = 2
	useLFIntermediary.set(useLFIntermediaries(minecraft_version))
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings(legacy.yarn(minecraft_version, "local"))
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	it.options.encoding = "UTF-8"

	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release = 8
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// Select the repositories you want to publish to
	repositories {
		// Uncomment to publish to the local maven
		// mavenLocal()
	}
}
