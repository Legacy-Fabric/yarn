plugins {
	id 'fabric-loom' version "1.3-SNAPSHOT"
	id 'legacy-looming' version "1.3-SNAPSHOT"
	id 'maven-publish'
}

def ENV = System.getenv()
def minecraft_version = ENV.MC_VERSION ? ENV.MC_VERSION : "1.8.9"

version = project.mod_version
group = project.maven_group

repositories {
	mavenLocal()
}

legacyLooming {
	intermediaryVersion = 2
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings legacy.yarn(minecraft_version, "local")
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (JavaVersion.current().isJava9Compatible()) it.options.release = 8

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
